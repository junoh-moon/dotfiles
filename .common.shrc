source $HOME/.shinit

zsh_completion_path=$HOME/.local/share/zsh/vendor-completions
bash_completion_path=$HOME/.local/share/bash-completion/completions

if [[ ! $fpath =~ $zsh_completion_path ]]; then
	fpath=($zsh_completion_path $fpath)
fi

if [[ ! $FPATH =~ $bash_completion_path ]]; then
	FPATH=$bash_completion_path:$FPATH
fi

alias normalize_unicode='convmv -f utf-8 -t utf-8 --notest --nfc'

alias countfiles="for t in files links directories; do echo \`find . -type \${t:0:1} | wc -l\` \$t; done 2> /dev/null"

palette() {
	for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done
}

backup() {
	case $1 in
		-h|--help|'')
			printf "Usage: %s files|folders...\n" "$0"
			return 0
			;;
		*)
			for it in "$@"
			do
				cp "${it}"{,.bak}
			done
			;;
	esac
}

# Search all file types including pdf, ppt, and open grepped files
grepOpen() {
	RG_PREFIX="rga --files-with-matches"
	local file
	file="$(
		FZF_DEFAULT_COMMAND="$RG_PREFIX '$1'" \
			fzf --sort --preview="[[ ! -z {} ]] && rga --pretty --context 5 {q} {}" \
				--phony -q "$1" \
				--bind "change:reload:$RG_PREFIX {q}" \
				--preview-window="70%:wrap"
	)" &&
	echo "opening $file" &&
	xdg-open "$file"
}

# Search filenames and open them
findOpen() {
	local file
	file="$(fzf)" &&
	echo "opening $file" &&
	xdg-open "$file"
}

transfer() {
	local url=https://transfer.sixtyfive.me
	if [ $# -eq 0 ]
	then
		echo "No arguments specified.\nUsage:\n transfer <file|directory>\n ... | transfer <file_name>" >&2
		return 1
	fi
	if tty -s
	then
		file="$1" 
		file_name=$(basename "$file") 
		if [ ! -e "$file" ]
		then
			echo "$file: No such file or directory" >&2
			return 1
		fi
		if [ -d "$file" ]
		then
			file_name="$file_name.zip"
			(
				pushd "$file" && zip -r -q - .
				) | curl --progress-bar --upload-file "-" "$url/$(urlencode $file_name)" | tee /dev/null
		else
			cat "$file" | curl --progress-bar --upload-file "-" "$url/$(urlencode $file_name)" | tee /dev/null
		fi
	else
		file_name=$1 
		curl --progress-bar --upload-file "-" "$url/$(urlencode $file_name)" | tee /dev/null
	fi
}
