[file-build-and-run]
# Build only
command:make=make -f "$(VIM_FILEPATH)"
command:mp=mptopdf "$(VIM_FILEPATH)"
command:tex=:VimtexCompile
command:vim=:silent! source %
# Build and run
command:kotlin=kotlinc "$(VIM_FILEPATH)" -include-runtime -d "$(VIM_FILEDIR)/$(VIM_FILENOEXT).jar" && java -enableassertions -jar "$(VIM_PATHNOEXT).jar"
command:c=clang -std=c11 -W -Wall -g -O0 -lpthread -lm -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" "$(VIM_FILEPATH)" && "$(VIM_PATHNOEXT)"
command:cpp=clang++ -W -Wall -g -O0 -lpthread -lm -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" "$(VIM_FILEPATH)" && "$(VIM_PATHNOEXT)"
command:rust=rustc "$(VIM_FILEPATH)" && "$(VIM_PATHNOEXT)"
# Run only
command:yaml=yq -e .apiVersion < "$(VIM_FILEPATH)" &> /dev/null && yq -e .kind < "$(VIM_FILEPATH)" &> /dev/null && kubectl apply -f "$(VIM_FILEPATH)" || echo "Not a valid k8s yaml file"
command:erlang=escript "$(VIM_FILEPATH)" +P
command:elixir=elixir "$(VIM_FILEPATH)"
command:go=go run "$(VIM_FILEPATH)"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:java=java "$(VIM_FILEPATH)"
command:sh=sh "$(VIM_FILENAME)"
command:bash=bash "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
command:ocaml=ocaml "$(VIM_FILENAME)"
command:typescript=npx ts-node "$(VIM_FILENAME)"
command:markdown=:MarkdownPreview
command:scheme=racket -e '(load "$(VIM_FILENAME)")'
# Config
output=terminal
#pos=floaterm
cwd=$(VIM_FILEDIR)
save=2
