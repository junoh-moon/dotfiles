#!/usr/bin/env bash

get_cpu_usage() {
	awk '{
	u=$2+$4; 
	t=$2+$4+$5; 
	if (NR==1){
		u1=u; 
		t1=t;
	} else 
		print ($2+$4-u1) * 100 / (t-t1); 
	}' <(grep 'cpu ' /proc/stat) <(
		sleep 1
		grep 'cpu ' /proc/stat
	)
}

get_mem_usage() {
	local data
	data="$(cat /proc/meminfo)"
	local total
	total=$(echo "$data" | grep MemTotal | grep -Po '\d+')
	local available
	available=$(echo "$data" | grep MemAvailable | grep -Po '\d+')

	local usage
	usage=$(echo "($total - $available) / $total * 100" | bc -l)
	printf "%.2f%%\t%.1fGB" "$usage" "$(echo "scale=1;$total / 1024 / 1024" | bc -l)"
}

cpu() {

	local cores
	cores=$(grep </proc/cpuinfo -c 'model name')
	local usage
	usage=$(get_cpu_usage)
	local model_name
	model_name=$(grep -Po 'model name\s*: .*' /proc/cpuinfo | grep -Po '(?<=: ).*' | sed -n 1p)
	local name
	name=$(cat /proc/sys/kernel/hostname)
	local mem
	mem="$(get_mem_usage)"

	printf "%s\t%4.1f%%\t%s\t(%d)\t%s\n" "$name" "$usage" "$model_name" "$cores" "$mem"
}

while [[ $# -gt 0 ]]; do
	case $1 in
	-v | --verbose)
		printf "Host\tUsage\tCPU\tCores\tMem Usage\tMem Capacity\n"
		;;
	esac
	shift
done

cpu
